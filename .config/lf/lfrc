# interpreter for shell commands
set shell zsh
set shellopts '-eu'
set icons
set ifs "\n"
set scrolloff 10
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set roundbox
set drawbox
set autoquit true
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

cmd open ${{
    case $(file --mime-type "$(readlink -f "$f")" -b) in
        application/vnd.openxmlformats-officedocument.spreadsheetml.sheet)
            localc $fx ;;
        image/vnd.djvu|application/pdf|application/postscript)
            zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty|application/x-subrip)
            $EDITOR $fx ;;
        image/x-xcf)
            gimp "$f" >/dev/null 2>&1 ;;
        image/svg+xml)
            display -- "$f" ;;
        image/*)
            file=$(rotdir "$f" | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|avif\|tif\|ico\)\(_large\)*$" | nsxiv -aio 2>/dev/null | tail -n 1)
            if [ -n "$file" ]; then
                lf -remote "send select \"$file\""
            fi
            ;;
        audio/*|video/x-ms-asf)
             mpv $f ;;
        video/*)
             setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
        application/pdf|application/vnd.djvu|application/epub*)
            zathura $fx >/dev/null 2>&1 ;;
        application/pgp-encrypted)
            $EDITOR $fx ;;
        application/vnd.openxmlformats-officedocument.wordprocessingml.document|application/vnd.oasis.opendocument.text|application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|application/vnd.oasis.opendocument.spreadsheet|application/vnd.oasis.opendocument.spreadsheet-template|application/vnd.openxmlformats-officedocument.presentationml.presentation|application/vnd.oasis.opendocument.presentation-template|application/vnd.oasis.opendocument.presentation|application/vnd.ms-powerpoint|application/vnd.oasis.opendocument.graphics|application/vnd.oasis.opendocument.graphics-template|application/vnd.oasis.opendocument.formula|application/vnd.oasis.opendocument.database)
            libreoffice $fx >/dev/null 2>&1 ;;
        application/octet-stream)
            case ${f##*.} in
                doc|docx|xls|xlsx|odt|ppt|pptx)
                    libreoffice $fx >/dev/null 2>&1 ;;
                ghw)
                    gtkwave $f >/dev/null 2>&1 ;;
                ts)
                    mpv $f -quiet >/dev/null 2>&1 ;;
                *)
                    zathura $fx >/dev/null 2>&1 ;;
            esac ;;
        *)
            for f in $fx; do $OPENER "$f" >/dev/null 2>&1; done ;;
    esac
}}

cmd delete ${{
    set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd extract ${{
    set -f
    case $f in
	    *.tar.bz2)   tar xjf $f     ;;
		*.tar.gz)    tar xzf $f     ;;
		*.bz2)       bunzip2 $f     ;;
		*.rar)       unrar e $f     ;;
		*.gz)        gunzip $f      ;;
		*.tar)       tar xf $f      ;;
		*.tbz2)      tar xjf $f     ;;
		*.tgz)       tar xzf $f     ;;
		*.zip)       unzip $f       ;;
		*.Z)         uncompress $f  ;;
		*.7z)        7z x $f        ;;
		*.tar.xz)    tar xf $f      ;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd bulkrename ${{
    tmpfile_old="$(mktemp)"
    tmpfile_new="$(mktemp)"

    [ -n "$fs" ] && fs=$(basename -a $fs) || fs=$(ls)

    echo "$fs" > "$tmpfile_old"
    echo "$fs" > "$tmpfile_new"
    $EDITOR "$tmpfile_new"

    [ "$(wc -l < "$tmpfile_old")" -eq "$(wc -l < "$tmpfile_new")" ] || { rm -f "$tmpfile_old" "$tmpfile_new"; exit 1; }

    paste "$tmpfile_old" "$tmpfile_new" | while IFS="$(printf '\t')" read -r src dst
    do
        [ "$src" = "$dst" ] || [ -e "$dst" ] || mv -- "$src" "$dst"
    done

    rm -f "$tmpfile_old" "$tmpfile_new"
    lf -remote "send $id unselect"
}}

# Binds
map gh cd ~
map gg top
map G bottom
map A :push %mkdir<space>
map a :push %touch<space>
map D delete
map d cut
map y copy
map x cut
map p paste
map c clear
map r rename 
map R bulkrename
map W $wallpaper set "$f" &> /dev/null &
map v visual
map V invert
map f search

map i 
map w 

source "~/.config/lf/shortcutsrc"
