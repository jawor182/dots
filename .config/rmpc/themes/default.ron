#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
(
    default_album_art_path: None,
    show_song_table_header: true,
    draw_borders: true,
    format_tag_separator: " | ",
    browser_column_widths: [20, 50, 42],
    background_color: None,
    text_color: None,
    header_background_color: None,
    modal_background_color: None,
    modal_backdrop: false,
    preview_label_style: (fg: "yellow"),
    preview_metadata_group_style: (fg: "yellow", modifiers: "Bold"),
    tab_bar: (
        enabled: true,
        active_style: (fg: "#ebdbb2", bg: "#d65d0e", modifiers: "Bold"),
        inactive_style: (),
    ),
    highlighted_item_style: (fg: "#d65d0e", modifiers: "Bold"),
    current_item_style: (fg: "#ebdbb2", bg: "#d65d0e", modifiers: "Bold"),
    borders_style: (fg: "#d65d0e"),
    highlight_border_style: (fg: "#d65d0e"),
    symbols: (
        song: "",
        dir: "",
        playlist: "󰲸",
        marker: "*",
        ellipsis: "...",
        song_style: None,
        dir_style: None,
        playlist_style: None,
    ),
    level_styles: (
        info: (fg: "#d65d0e", bg: "black"),
        warn: (fg: "yellow", bg: "black"),
        error: (fg: "red", bg: "black"),
        debug: (fg: "light_green", bg: "black"),
        trace: (fg: "magenta", bg: "black"),
    ),
    progress_bar: (
        symbols: ["", "█", "", "█", "" ],
        track_style: (fg: "#282828"),
        elapsed_style: (fg: "#d65d0e"),
        thumb_style: (fg: "#d65d0e"),
    ),
    scrollbar: (
        symbols: ["│", "█", "▲", "▼"],
        track_style: (),
        ends_style: (),
        thumb_style: (fg: "#d65d0e"),
    ),
    song_table_format: [
        (
            prop: (kind: Property(Artist),
                default: (kind: Text("Unknown"))
            ),
            width: "20%",
        ),
        (
            prop: (kind: Property(Title),
                default: (kind: Text("Unknown"))
            ),
            width: "35%",
        ),
        (
            prop: (kind: Property(Album), style: (fg: "white"),
                default: (kind: Text("Unknown Album"), style: (fg: "white"))
            ),
            width: "30%",
        ),
        (
            prop: (kind: Property(Duration),
                default: (kind: Text("-"))
            ),
            width: "15%",
            alignment: Right,
        ),
    ],
    components: {
    "state": Pane(Property(
        content: [
            (kind: Text("["), style: (fg: "#d65d0e", modifiers: "Bold")),
            (kind: Property(Status(StateV2(playing_label: "Playing", paused_label: "Paused", stopped_label: "Stopped"))), style: (fg: "#d65d0e", modifiers: "Bold")),
            (kind: Text("]"), style: (fg: "#d65d0e", modifiers: "Bold"))
        ], align: Left,
    )),
    "title": Pane(Property(
        content: [
            (kind: Property(Song(Artist)), style: (fg: "#d65d0e", modifiers: "Bold"),
                default: (kind: Text("Unknown"), style: (fg: "#d65d0e", modifiers: "Bold"))
            ),
            (kind: Text(" - ")),
            (kind: Property(Song(Title)),
                default: (kind: Text("Unknown Album"))
            )
        ], align: Center, scroll_speed: 2
    )),
    "elapsed": Pane(Property(
        content:[
            (kind: Property(Status(Elapsed))),
            (kind: Text(" / ")),
            (kind: Property(Status(Duration))),
        ],
    )),
    "states": Pane(Property(
        content: [
            (kind: Property(Status(RepeatV2(
                on_label: " ",
                off_label: " ",
                on_style: (fg: "#d65d0e", modifiers: "Bold"),
                off_style: (fg: "blue", modifiers: "Dim"),
            )))),
            (kind: Property(Status(RandomV2(
                on_label: " ",
                off_label: " ",
                on_style: (fg: "#d65d0e", modifiers: "Bold"),
                off_style: (fg: "blue", modifiers: "Dim"),
            )))),
            (kind: Property(Status(ConsumeV2(
                on_label: "󰮯 ",
                off_label: "󰮯 ",
                oneshot_label: "󰮯 ",
                on_style: (fg: "#d65d0e", modifiers: "Bold"),
                off_style: (fg: "blue", modifiers: "Dim"),
                oneshot_style: (fg: "red", modifiers: "Dim"),
            )))),
            (kind: Property(Status(SingleV2(
                on_label: "󰑘 ",
                off_label: "󰑘 ",
                oneshot_label: "󰑘 ",
                on_style: (fg: "#d65d0e", modifiers: "Bold"),
                off_style: (fg: "blue", modifiers: "Dim"),
                oneshot_style: (fg: "red", modifiers: "Bold"),
            )))),
        ], align: Right
    )),
    "album": Pane(Property(
        content: [
            (kind: Text("Album: "), style: (fg: "#d65d0e")),
            (kind: Property(Song(Album)), 
                default: (kind: Text("Unknown Album"), style: (fg: "#d65d0e"))
            )
        ], align: Center, scroll_speed: 2
    )),
    "volume": Split(
        direction: Horizontal,
            panes: [
                (size: "100%", pane: Pane(Property(content:[(kind: Text("Volume: "),style: (fg:"#d65d0e"))],align:Right))), 
                (size: "2", pane: Pane(Property(content: [(kind: Property(Status(Volume)), style: (fg: "blue"))], align: Right))),
                (size: "1", pane: Pane(Property(content: [(kind: Text("%"), style: (fg: "blue"))]))),
            ]
        ),
    "top_row": Split(
        direction: Horizontal,
        panes: [
            (size: "23", pane: Component("state")),
            (size: "100%", pane: Component("album")),
            (size: "23", pane: Component("volume"))
        ],
    ),
    "bottom_row": Split(
        direction: Horizontal,
        panes: [
            (size: "15", pane: Component("elapsed")),
            (size: "100%", pane: Component("title")),
            (size: "15", pane: Component("states")),
        ],
    ),
    "header": Split(
        direction: Vertical,
        panes: [
            (size: "1", pane: Component("top_row")),
            (size: "1", pane: Component("bottom_row")),
        ]
    ),
    "progress_bar": Split(
        direction: Horizontal,
        panes: [
            (
                pane: Pane(Property(content: [(kind: Property(Status(StateV2(playing_label: "  ", paused_label: "  ", stopped_label: "  ",
                    playing_style: (fg: "#d65d0e"), paused_style: (fg: "yellow"), stopped_style: (fg: "red")
                ))))], align: Left)),
                size: "3",
            ),
            (
                size: "100%",
                pane: Pane(ProgressBar),
            ),
        ]
        ),
    },
    layout: Split(
        direction: Vertical,
        panes: [
            (
                pane: Component("header"),
                size: "2",
            ),
            (
                pane: Pane(Tabs),
                size: "3",
            ),
            (
                pane: Pane(TabContent),
                size: "100%",
            ),
            (
                pane: Component("progress_bar"),
                size: "1",
            ),
        ],
    ),
    header: (rows: []),
    browser_song_format: [
       (
            kind: Group([
                (kind: Property(Track)),
                (kind: Text(" ")),
            ])
        ),
        (
            kind: Group([
                (kind: Property(Artist)),
                (kind: Text(" - ")),
                (kind: Property(Title)),
            ]),
            default: (kind: Property(Filename))
        ),
    ],
    lyrics: (
        timestamp: false
    )
)
