#!/bin/bash

path="$HOME/.local/share/mpvq"
playlist="$path/playlist.m3u"
lockfile="$path/mpvq.lock"
ipc_socket="/tmp/mpvsocket"

mkdir -p "$path"
[ ! -f "$playlist" ] && touch "$playlist"

deduplicate() {
    if [ -f "$playlist" ]; then
        awk '!a[$0]++' "$playlist" > "$playlist.tmp" && mv "$playlist.tmp" "$playlist"
    fi
}

normalize_path() {
    local input="$1"
    if [[ "$input" =~ ^https?:// ]]; then
        echo "$input"
    else
        local abs
        abs=$(realpath "$input" 2>/dev/null)
        if [ -n "$abs" ]; then
            echo "file://$abs"
        else
            echo "$input"
        fi
    fi
}

mpv_running() {
    if [ -S "$ipc_socket" ]; then
        echo '{ "command": ["get_property", "idle-active"] }' \
            | socat - "$ipc_socket" >/dev/null 2>&1
        return $?
    else
        return 1
    fi
}

mpv_playlist() {
    echo '{ "command": ["get_property", "playlist"] }' \
        | socat - "$ipc_socket" 2>/dev/null | jq -r '.data[].filename' 2>/dev/null
}

add() {
    local file_or_url="$2"
    [ -z "$file_or_url" ] && { echo "Usage: mpvq add <file-or-url>"; exit 1; }

    local normalized
    normalized=$(normalize_path "$file_or_url")

    echo "$normalized" >>"$playlist"
    deduplicate

    if mpv_running; then
        local current_playlist
        current_playlist=$(mpv_playlist)
        if ! echo "$current_playlist" | grep -Fxq "$normalized"; then
            echo '{ "command": ["loadfile", "'"$normalized"'", "append"] }' | socat - "$ipc_socket"
        fi
    else
        # Clean up stale socket if it exists but MPV is dead
        [ -S "$ipc_socket" ] && rm -f "$ipc_socket"
    fi
}

addclip() {
    local clipfile
    if [ "$XDG_SESSION_TYPE" = "x11" ]; then
        clipfile=$(xclip -o -selection clipboard 2>/dev/null)
    else
        clipfile=$(wl-paste 2>/dev/null)
    fi

    if echo "$clipfile" | grep -Eq '^https?://'; then
        add add "$clipfile"
    elif [ -f "$clipfile" ]; then
        add add "$clipfile"
    fi
}

show() {
    if [ ! -s "$playlist" ]; then
        echo "Queue is empty."
    else
        cat "$playlist"
    fi
}

play() {
    exec 200>"$lockfile"
    flock -n 200 || { echo "Another mpvq instance is already running!"; exit 1; }

    setsid -f mpv \
        --playlist="$playlist" \
        --speed=2 \
        --player-operation-mode=pseudo-gui \
        --input-ipc-server="$ipc_socket" \
        --script="$HOME/.config/mpv/scripts/mpvq-live-sync.lua" \
        --script="/usr/lib/mpv-mpris/mpris.so" >/dev/null 2>&1 &
}

case "$1" in
    add) add "$@" ;;
    show) show ;;
    play) play ;;
    addclip) addclip ;;
    deduplicate) deduplicate ;;
    *)
        echo "Usage: mpvq {add|show|play|deduplicate|addclip}"
        exit 1
        ;;
esac
